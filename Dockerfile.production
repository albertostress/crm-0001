# Multi-stage Dockerfile for EspoCRM Production
FROM php:8.2-apache AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libxpm-dev \
    libzip-dev \
    libicu-dev \
    libldap2-dev \
    libxml2-dev \
    libcurl4-openssl-dev \
    libonig-dev \
    curl \
    wget \
    zip \
    unzip \
    git \
    cron \
    supervisor \
    netcat-traditional \
    default-mysql-client \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure gd \
    --with-freetype \
    --with-jpeg \
    --with-webp \
    --with-xpm \
    && docker-php-ext-install -j$(nproc) \
    gd \
    pdo \
    pdo_mysql \
    mysqli \
    zip \
    intl \
    ldap \
    soap \
    bcmath \
    opcache \
    pcntl \
    exif \
    curl \
    mbstring \
    iconv \
    xml

# Install Node.js only if needed for build (EspoCRM comes with pre-built assets)
# Using NodeJS from official repos for better compatibility
RUN apt-get update && apt-get install -y nodejs npm \
    && rm -rf /var/lib/apt/lists/*

# Configure Apache
RUN a2enmod rewrite headers expires deflate ssl
RUN sed -i 's/AllowOverride None/AllowOverride All/g' /etc/apache2/apache2.conf

# Configure PHP
COPY <<EOF /usr/local/etc/php/conf.d/espocrm.ini
memory_limit = 256M
upload_max_filesize = 50M
post_max_size = 50M
max_execution_time = 180
max_input_time = 180
display_errors = Off
log_errors = On
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
date.timezone = UTC
session.gc_maxlifetime = 86400
opcache.enable = 1
opcache.memory_consumption = 256
opcache.max_accelerated_files = 20000
opcache.revalidate_freq = 0
opcache.validate_timestamps = 0
EOF

# Build stage
FROM base AS build

WORKDIR /var/www/html

# Copy application files
COPY . .

# Ensure custom directories exist and copy customizations
RUN mkdir -p client/custom/res/css client/custom/lib custom/Espo/Custom/Resources/metadata/app
COPY client/custom/ client/custom/
COPY custom/ custom/

# Install composer dependencies
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
RUN composer install --no-dev --optimize-autoloader --no-interaction

# Build frontend assets (if package.json exists and has build script)
RUN if [ -f "package.json" ] && npm run | grep -q "build"; then \
        npm ci --no-audit --no-fund && npm run build; \
    else \
        echo "No build script found or package.json missing, skipping frontend build"; \
    fi

# Set proper permissions
RUN find . -type d -exec chmod 755 {} \; \
    && find . -type f -exec chmod 644 {} \; \
    && chmod 755 bin/command \
    && if [ -f "client/build.js" ]; then chmod 755 client/build.js; fi

# Production stage
FROM base AS production

WORKDIR /var/www/html

# Copy built application from build stage
COPY --from=build --chown=www-data:www-data /var/www/html .

# Create EVERTEC branding customizations directly
RUN mkdir -p /var/www/html/client/custom/res/css \
    && mkdir -p /var/www/html/client/custom/lib \
    && mkdir -p /var/www/html/custom/Espo/Custom/Resources/metadata/app

# Create custom CSS file
COPY <<'EOF' /var/www/html/client/custom/res/css/custom.css
/* Remove completamente o watermark EspoCRM em TODOS os lugares */
/* Customização para EVERTEC - Deployment Dokploy */

/* Página de login - esconde o link original */
.credit.small a,
p.credit.small a,
.credit a,
footer .credit a,
#footer .credit a {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
}

/* Remove texto "EspoCRM" completamente */
.credit.small,
p.credit.small,
.credit,
footer .credit,
#footer .credit {
    font-size: 0 !important;
    color: transparent !important;
}

/* Página de login - adiciona novo texto */
.credit.small::after,
p.credit.small::after,
.credit::after,
footer .credit::after,
#footer .credit::after {
    content: "© 2025 EVERTEC CRM — Todos os direitos reservados" !important;
    display: block !important;
    text-align: center !important;
    font-size: 13px !important;
    color: #999 !important;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif !important;
    margin: 10px 0 !important;
    padding: 5px 0 !important;
    line-height: 1.4 !important;
    opacity: 0.8 !important;
}

/* Sidebar após login */
.layout__sidebar .credit,
.layout__sidebar .copyright,
.sidebar .credit,
.sidebar .copyright,
.navbar .credit,
.main-footer .credit {
    display: none !important;
    visibility: hidden !important;
}

/* Adiciona texto no sidebar */
.layout__sidebar::after,
.sidebar::after {
    content: "© 2025 EVERTEC CRM — Todos os direitos reservados" !important;
    display: block !important;
    text-align: center !important;
    opacity: 0.7 !important;
    padding: 10px 0 !important;
    font-size: 12px !important;
    color: #bbb !important;
    border-top: 1px solid #eee !important;
    margin-top: 20px !important;
}

/* Remove qualquer footer com EspoCRM */
[data-name="footer"] .credit,
.page-footer .credit,
.app-footer .credit {
    display: none !important;
}

/* Remove EspoCRM de modais e popups */
.modal .credit,
.popup .credit,
.dialog .credit {
    display: none !important;
}

/* Esconde links para espocrm.com */
a[href*="espocrm.com" i] {
    display: none !important;
    visibility: hidden !important;
}
EOF

# Create custom JavaScript file
COPY <<'EOF' /var/www/html/client/custom/lib/custom-footer.js
/**
 * EVERTEC CRM - Watermark Removal and Branding Replacement
 * Version: 2.0 - Dokploy Production
 */
(function() {
    'use strict';
    
    const EVERTEC_BRANDING = '© 2025 EVERTEC CRM — Todos os direitos reservados';
    
    function replaceEspoCrmBranding() {
        try {
            const selectors = [
                '.credit.small',
                '.credit',
                'p.credit',
                '#footer .credit',
                'footer .credit',
                '.layout__sidebar .credit',
                '.sidebar .credit'
            ];
            
            selectors.forEach(selector => {
                const elements = document.querySelectorAll(selector);
                elements.forEach(element => {
                    if (element.textContent && 
                        (element.textContent.includes('EspoCRM') || 
                         element.textContent.includes('espocrm.com'))) {
                        element.innerHTML = EVERTEC_BRANDING;
                        element.style.textAlign = 'center';
                        element.style.color = '#999';
                        element.style.fontSize = '13px';
                        element.classList.add('evertec-footer');
                    }
                });
            });
            
            // Remove links diretos para espocrm.com
            const links = document.querySelectorAll('a[href*="espocrm.com"]');
            links.forEach(link => {
                link.style.display = 'none';
                link.style.visibility = 'hidden';
            });
            
        } catch (error) {
            console.error('[EVERTEC Branding] Error:', error);
        }
    }
    
    // Inicialização
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', replaceEspoCrmBranding);
    } else {
        replaceEspoCrmBranding();
    }
    
    // Execução periódica
    setInterval(replaceEspoCrmBranding, 1000);
    
    // Observer para mudanças no DOM
    if (typeof MutationObserver !== 'undefined' && document.body) {
        const observer = new MutationObserver(function(mutations) {
            let shouldReplace = false;
            mutations.forEach(function(mutation) {
                if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
                    shouldReplace = true;
                }
            });
            if (shouldReplace) {
                setTimeout(replaceEspoCrmBranding, 100);
            }
        });
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    }
})();

// Fallback simples
(function() {
    const fallbackReplace = function() {
        const credits = document.querySelectorAll('.credit');
        credits.forEach(function(credit) {
            if (credit.textContent.includes('EspoCRM')) {
                credit.innerHTML = '© 2025 EVERTEC CRM — Todos os direitos reservados';
            }
        });
    };
    setInterval(fallbackReplace, 2000);
})();
EOF

# Create metadata configuration
COPY <<'EOF' /var/www/html/custom/Espo/Custom/Resources/metadata/app/client.json
{
    "cssList": [
        "__APPEND__",
        "client/custom/res/css/custom.css"
    ],
    "scriptList": [
        "__APPEND__",
        "client/custom/lib/custom-footer.js"
    ]
}
EOF

# Create necessary directories with proper permissions
RUN mkdir -p /var/www/html/data \
    && mkdir -p /var/www/html/custom \
    && mkdir -p /var/www/html/client/custom \
    && mkdir -p /var/www/html/upload \
    && chown -R www-data:www-data /var/www/html/data \
    && chown -R www-data:www-data /var/www/html/custom \
    && chown -R www-data:www-data /var/www/html/client/custom \
    && chown -R www-data:www-data /var/www/html/upload \
    && chmod -R 775 /var/www/html/data \
    && chmod -R 775 /var/www/html/custom \
    && chmod -R 775 /var/www/html/upload

# AGGRESSIVE: Replace EspoCRM in core files during build
RUN echo "🔨 Removing EspoCRM watermark from core files..." \
    && find /var/www/html -type f \( -name "*.php" -o -name "*.js" -o -name "*.tpl" \) \
        -not -path "*/vendor/*" \
        -not -path "*/node_modules/*" \
        -not -path "*/tests/*" \
        -exec sed -i 's/EspoCRM/EVERTEC CRM/g' {} \; \
        -exec sed -i 's/espocrm\.com/evertec.com/g' {} \; 2>/dev/null || true \
    && echo "✅ Core files patched"

# Configure Apache virtual host
COPY <<EOF /etc/apache2/sites-available/000-default.conf
<VirtualHost *:80>
    ServerName crm.kiandaedge.online
    DocumentRoot /var/www/html
    
    <Directory /var/www/html>
        Options -Indexes +FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
    
    # Health check endpoint
    Alias /api/v1/health /var/www/html/public/api/v1/health.php
    
    ErrorLog \${APACHE_LOG_DIR}/error.log
    CustomLog \${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
EOF

# Set Apache ServerName globally to suppress warning
RUN echo "ServerName crm.kiandaedge.online" >> /etc/apache2/apache2.conf

# Create health check script
COPY <<'EOF' /usr/local/bin/healthcheck.php
<?php
// Simple health check for EspoCRM
try {
    // Check if config exists
    if (!file_exists('/var/www/html/data/config.php')) {
        http_response_code(503);
        echo json_encode(['status' => 'error', 'message' => 'Configuration not found']);
        exit(1);
    }
    
    // Try to include config
    $config = include('/var/www/html/data/config.php');
    
    // Check database connection if config exists
    if (isset($config['database'])) {
        $dsn = "mysql:host={$config['database']['host']};port={$config['database']['port']};dbname={$config['database']['dbname']}";
        $pdo = new PDO($dsn, $config['database']['user'], $config['database']['password']);
        $pdo->query('SELECT 1');
    }
    
    http_response_code(200);
    echo json_encode(['status' => 'healthy', 'timestamp' => time()]);
} catch (Exception $e) {
    http_response_code(503);
    echo json_encode(['status' => 'unhealthy', 'error' => $e->getMessage()]);
    exit(1);
}
EOF

RUN chmod +x /usr/local/bin/healthcheck.php

# Create startup script
COPY <<'EOF' /usr/local/bin/docker-entrypoint.sh
#!/bin/bash
set -e

echo "Starting EspoCRM container..."

# Wait for database to be ready
echo "Checking database connectivity..."
DB_HOST=${DB_HOST:-database}
DB_PORT=${DB_PORT:-3306}
TIMEOUT=60
COUNTER=0

while ! nc -z "$DB_HOST" "$DB_PORT"; do
    COUNTER=$((COUNTER + 1))
    if [ $COUNTER -gt $TIMEOUT ]; then
        echo "❌ Database connection timeout after ${TIMEOUT} seconds"
        exit 1
    fi
    echo "⏳ Waiting for database... (${COUNTER}/${TIMEOUT})"
    sleep 1
done
echo "✅ Database is ready!"

# Wait a bit more for database to be fully ready
sleep 5

# Check if this is the first run (no config exists)
if [ ! -f /var/www/html/data/config.php ]; then
    echo "🔧 First run detected - EspoCRM will need initial setup"
    echo "🌐 Visit your domain to complete the installation wizard"
else
    echo "✅ Configuration found - running maintenance tasks"
    
    # Run EspoCRM rebuild if needed
    echo "🔄 Running EspoCRM rebuild..."
    su -s /bin/bash -c "cd /var/www/html && php bin/command rebuild" www-data || true
    
    # Clear cache
    echo "🧹 Clearing cache..."
    su -s /bin/bash -c "cd /var/www/html && php bin/command clear-cache" www-data || true
fi

# Start cron service
echo "⏰ Starting cron service..."
service cron start

# Configure cron for EspoCRM (run every minute)
echo "📅 Setting up EspoCRM scheduled jobs..."
echo "* * * * * www-data cd /var/www/html && php bin/command run-job > /dev/null 2>&1" > /etc/cron.d/espocrm
chmod 0644 /etc/cron.d/espocrm

# Set proper ownership
chown -R www-data:www-data /var/www/html/data /var/www/html/custom /var/www/html/upload /var/www/html/client/custom 2>/dev/null || true

# Apply EVERTEC branding customizations
echo "🎨 Applying EVERTEC branding customizations..."

# Set proper permissions for custom files
if [ -d /var/www/html/client/custom ]; then
    echo "✅ Setting permissions for custom files..."
    chown -R www-data:www-data /var/www/html/client/custom
    chmod -R 755 /var/www/html/client/custom
    find /var/www/html/client/custom -type f -name "*.css" -exec chmod 644 {} \;
    find /var/www/html/client/custom -type f -name "*.js" -exec chmod 644 {} \;
fi

if [ -d /var/www/html/custom ]; then
    echo "✅ Setting permissions for metadata..."
    chown -R www-data:www-data /var/www/html/custom
    chmod -R 755 /var/www/html/custom
fi

# FORCE: Replace EspoCRM references in core files (backup first)
echo "🔧 Patching core files to remove EspoCRM watermark..."

# Find and replace in PHP files
find /var/www/html -type f -name "*.php" -exec grep -l "EspoCRM" {} \; 2>/dev/null | while read file; do
    if [[ ! "$file" =~ vendor|tests|data|upload ]]; then
        echo "  Patching: $file"
        sed -i.bak 's/EspoCRM/EVERTEC CRM/g' "$file"
        sed -i 's/espocrm\.com/evertec.com/g' "$file"
    fi
done

# Find and replace in JavaScript files
find /var/www/html/client -type f -name "*.js" -exec grep -l "EspoCRM" {} \; 2>/dev/null | while read file; do
    if [[ ! "$file" =~ node_modules|vendor ]]; then
        echo "  Patching: $file"
        sed -i.bak 's/EspoCRM/EVERTEC CRM/g' "$file"
        sed -i 's/espocrm\.com/evertec.com/g' "$file"
    fi
done

# Find and replace in template files
find /var/www/html -type f -name "*.tpl" -exec grep -l "EspoCRM" {} \; 2>/dev/null | while read file; do
    echo "  Patching: $file"
    sed -i.bak 's/EspoCRM/EVERTEC CRM/g' "$file"
    sed -i 's/espocrm\.com/evertec.com/g' "$file"
done

# Clear all caches to force reload
echo "🧹 Clearing all caches..."
rm -rf /var/www/html/data/cache/* 2>/dev/null || true
rm -rf /var/www/html/client/lib/templates.tpl 2>/dev/null || true
rm -rf /var/www/html/data/upload/thumbnails/* 2>/dev/null || true

# Force rebuild after customizations
if [ -f /var/www/html/data/config.php ]; then
    echo "🔄 Force rebuilding with customizations..."
    su -s /bin/bash -c "cd /var/www/html && php bin/command rebuild" www-data || true
fi

echo "✅ EVERTEC branding applied successfully!"

echo "🚀 Starting Apache web server..."
echo "📍 EspoCRM will be available at: ${ESPOCRM_SITE_URL:-http://localhost}"
echo "🎨 EVERTEC branding active - EspoCRM watermark removed"

# Start Apache
exec apache2-foreground
EOF

RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD php /usr/local/bin/healthcheck.php || exit 1

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]